{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","handleChange","e","target","name","value","setState","trim","handleSubmit","preventDefault","props","onAdd","validateField","match","this","formInvalid","onSubmit","htmlFor","type","ClassNames","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eaf64846.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.css';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.css';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    descriptionError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value.trim(),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleError: false,\n      descriptionError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    });\n  };\n\n  validateField = (e) => {\n    const { name, value } = e.target;\n\n    // eslint-disable-next-line max-len\n    const linkRegex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (name) {\n      case 'title':\n      case 'description':\n      case 'imdbId':\n\n        this.setState({\n          [`${name}Error`]: !value,\n        });\n        break;\n\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState({\n          [`${name}Error`]: !value.match(linkRegex),\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    const formInvalid = !title\n      || !description\n      || !imdbId\n      || !imdbUrl\n      || !imgUrl;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n            className=\"label\"\n          >\n             Title:\n          </label>\n\n          <input\n            type=\"text\"\n            className={ClassNames('input is-link', {\n              'input is-danger': titleError,\n            })}\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n          />\n\n          {titleError && (\n            <article className=\"message is-danger\">\n              <div className=\"message-header\">\n                <p>\n                  The title must be more than 1 character\n                </p>\n              </div>\n            </article>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"description\"\n            className=\"label\"\n          >\n            Description:\n          </label>\n\n          <input\n            className={ClassNames('input is-link', {\n              'input is-danger': descriptionError,\n            })}\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n          />\n          {descriptionError && (\n            <article className=\"message is-danger\">\n              <div className=\"message-header\">\n                <p className=\"help is-danger\">\n                  The description must be more than 1 character\n                </p>\n              </div>\n            </article>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"imgUrl\"\n            className=\"label\"\n          >\n            Image url:\n          </label>\n\n          <input\n            type=\"text\"\n            className={ClassNames('input is-link', {\n              'input is-danger': imgUrlError,\n            })}\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n          />\n\n          {imgUrlError && (\n            <article className=\"message is-danger\">\n              <div className=\"message-header\">\n                <p className=\"help is-danger\">\n                  Image url is not valid\n                </p>\n              </div>\n            </article>\n          )}\n        </div>\n\n        <div className=\"wrap\">\n          <label\n            htmlFor=\"imdbUrl\"\n            className=\"label\"\n          >\n            IMDb url:\n          </label>\n\n          <input\n            type=\"text\"\n            className={ClassNames('input is-link', {\n              'input is-danger': imdbUrlError,\n            })}\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n          />\n\n          {imdbUrlError && (\n            <article className=\"message is-danger\">\n              <div className=\"message-header\">\n                <p className=\"help is-danger\">\n                  IMDb url is not valid\n                </p>\n              </div>\n            </article>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"imdbId\"\n            className=\"label\"\n          >\n            IMDb id:\n          </label>\n\n          <input\n            type=\"text\"\n            className={ClassNames('input is-link', {\n              'input is-danger': imdbIdError,\n            })}\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n          />\n\n          {imdbIdError && (\n            <article className=\"message is-danger\">\n              <div className=\"message-header\">\n                <p>\n                  IMDb id is not valid\n                </p>\n              </div>\n            </article>\n          )}\n        </div>\n        <div className=\"buttons\">\n          <button\n            type=\"submit\"\n            className=\"button is-link\"\n            title=\"Disabled button\"\n            disabled={formInvalid}\n          >\n            Add new movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}